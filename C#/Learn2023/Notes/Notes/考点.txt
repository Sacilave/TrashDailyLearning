基础语法：
	数据类型:
		值类型： // 从 System.ValueType 中派生的
			非数值类：
				bool  // True 或 False		默认 False
				char  // 16位 unicode字符		默认 '\0'
			数值类：
				有符号：
					decimal  // 128位 精确10进制，28-29位 有效位数			默认 0.0M
					double  // 64位 双精度浮点型			默认 0.0D
					float  // 32位 单精度浮点型			默认0.0F
					sbyte  // 8位 整数类型，-128 到 127			默认 0
					short  // 16位 整数类型，-32,768 到 32,767			默认 0
					int  // 32 位 整数类型，-2,147,483,648 到 2,147,483,647			默认 0 
					long  // 64 位 整数类型， -9,223,372,036,854,775,808 到 9,223,372,036,854,775,807			默认 0L
					
				无符号：
					byte  // 8位 无符号整数, 0 到 255	
					ushort  // 16位 无符号整数，0 到 4,294,967,295
					uint  // 32位 整数类型,0 到 4,294,967,295
					ulong  // 64位 整数类型,0 到 18,446,744,073,709,551,615
		引用类型：
			object  // 可以被分配为 包括 值类型，引用类型 等任何类型
			string  // 通过两种方式给变量分配。 @"" 可以无视 \ 转义字符，此时 换行符 和 缩进 都计算在字符串长度之内，"" 为正常字符串类型
			dynamic  // 动态类型，变量类型检查在运行时发生
			
	变量常量
		常量： public const int 变量名
	输入输出
	类型转换：
		隐式转换：（自动转换）
			如 int 自动转换为 long, float 自动转换为 double
			引用类型中 派生类型 自动转换为 基类型
		显式转换：
			a = (int)b;  // 将 double 转为 int 之类的
			引用类型从基类型转换为派生类型，必须进行显式强制转换
			intValue.ToString();  // 将转化为字符串
	运算符

流程控制：
	判断
	循环

数组：
	数组遍历
	数组排序
	数组查找

函数：
	方法封装
	方法参数
	方法返回值
	方法重载
	递归方法